@property (nonatomic, copy) AFGitHubUser *tag;
@property (nonatomic, copy) AFGitHubUser *tagger;
@property (nonatomic, copy) NSDictionary *object;
@property (nonatomic, copy) NSString *SHA;
@property (nonatomic, copy) NSString *message;
@property (nonatomic, copy) NSURL *URL;

////////////////////////////////////////////////////////////////

#pragma mark - Initializing

- (id)initWithDictionary:(NSDictionary *)dictionary {
  if(self = [super init]) {
    id val = nil;
    val = dictionary[@"url"];
if(AFGitHubIsStringWithAnyText(val)) self.URL = [NSURL URLWithString:val];
val = dictionary[@"tag"];
if([val isKindOfClass:[NSDictionary class]]) self.tag = [[AFGitHubUser alloc] initWithDictionary:val];
val = dictionary[@"message"];
if(AFGitHubIsStringWithAnyText(val)) self.message = val;
val = dictionary[@"object"];
if([val isKindOfClass:[NSDictionary class]]) self.object = val;
val = dictionary[@"tagger"];
if([val isKindOfClass:[NSDictionary class]]) self.tagger = [[AFGitHubUser alloc] initWithDictionary:val];
val = dictionary[@"sha"];
if(AFGitHubIsStringWithAnyText(val)) self.SHA = val;
  }
  return self;
}

#pragma mark - NSCopying

- (id)copyWithZone:(NSZone *)zone {
  AFGitHubTag *copy = [[self.class alloc] init];
  copy.URL = self.URL;
copy.tag = self.tag;
copy.message = self.message;
copy.object = self.object;
copy.tagger = self.tagger;
copy.SHA = self.SHA;
  return copy;
}

#pragma mark - NSCoding

- (id)initWithCoder:(NSCoder *)aDecoder {
  if(self = [self init]) {
    self.URL = [aDecoder decodeObjectForKey:@"url"];
self.tag = [aDecoder decodeObjectForKey:@"tag"];
self.message = [aDecoder decodeObjectForKey:@"message"];
self.object = [aDecoder decodeObjectForKey:@"object"];
self.tagger = [aDecoder decodeObjectForKey:@"tagger"];
self.SHA = [aDecoder decodeObjectForKey:@"sha"];
  }
  return self;
}

- (void)encodeWithCoder:(NSCoder *)aCoder {
  [aCoder encodeObject:self.URL forKey:@"url"];
[aCoder encodeObject:self.tag forKey:@"tag"];
[aCoder encodeObject:self.message forKey:@"message"];
[aCoder encodeObject:self.object forKey:@"object"];
[aCoder encodeObject:self.tagger forKey:@"tagger"];
[aCoder encodeObject:self.SHA forKey:@"sha"];
}

